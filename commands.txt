docker swarm init --advertise-addr ip:2377

docker swarm join-token worker

docker info

docker node ls

docker node promote node1

docker node demote node1

docker service scale my-php-app_web=2

sudo docker service scale frame_php-apache=2

sudo docker service rm my-php-app_web

sudo docker service create --name mynginx -p 80:80 nginx

sudo docker service create --name mynginx --replicas 2 -p 80:80 nginx

sudo docker service create --name mynginx --mode global -p 80:80 nginx

sudo docker stack rm phpapp

sudo docker service ps continarname

sudo docker stack ps myapps


sudo docker stack services newappps


sudo docker stack deploy -c docker-stack.yaml newappps


docker login -u "tmprajarajan" -p "Terminate@123" docker.io


# Tag the image
docker tag myapps/php-apache:latest tmprajarajan/myapps:latest

 sudo docker tag lamp:latest tmprajarajan/lamp:latest

sudo docker tag myphp:latest tmprajarajan/myphp:latest

# Push the image to Docker Hub
docker push tmprajarajan/myapps:latest





ubuntu@masternode:~$ sudo docker service ls
ID             NAME               MODE         REPLICAS   IMAGE                       PORTS
o1jpsw3sm5ce   php74_php-apache   replicated   3/3        tmprajarajan/myphp:latest   *:8002->8002/tcp

sudo docker service ps php74_php-apache

ubuntu@masternode:~$ sudo docker service scale php74_php-apache=5


sudo docker node update --availability active masternode

sudo docker build -t php81:latest -f php81 .


sudo docker service update --image tmprajarajan/php81:latest php74_php-apache


wget https://tomcat.apache.org/tomcat-7.0-doc/appdev/sample/sample.war

docker service create --name my-node-service --replicas 3 --network some-net --mount type=volume,source=mydata,target=/app/data --publish 3000:3000 node:latest

docker service create --name mynginx --replicas 1 --network some-net --mount type=volume,source=mydata,target=/app/data --publish 8081:80 nginx






